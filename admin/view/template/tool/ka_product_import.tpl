<?php
/*
  Project: CSV Product Import
  Author : karapuz <support@ka-station.com>

  Version: 4 ($Revision: 64 $)

*/
?>

<?php echo $header; ?>
<style type="text/css">

<!--

div.scroll {
  height: 200px;
  width: 100%;
  overflow: auto;
  border: 1px solid black;
  background-color: #ccc;
  padding: 8px;
}

.list td a.link {
  text-decoration: underline;
  color: blue;
}

#import_status {
  color: black;
}

.mark_valid {
	font-size: 24px;
	color: green;
	padding: 8px;
	display:none; 
}

-->
</style>

<?php echo $column_left; ?>
<div id="content">

	<?php if (!empty($is_wrong_db)) { ?>

		<div class="container-fluid">
		  <h1>Database is not compatible with the extension.</h1>
			<div class="alert alert-danger"><i class="fa fa-exclamation-circle"></i>
				Please re-install the extension at the 'Ka Extensions' page.</br>
				It means you need to click 'Uninstall' link and after the page refreshes click on the 'Install' link. 
				That should help make the database up to date for the current version of the import extension.
			</div>
  <p>
  </p>
  </br>

  <?php } elseif ($params['step'] == 1) { ?>

		<div class="page-header">  
			<div class="container-fluid">
				<div class="pull-right">
						<button type="submit" form="form-input" data-toggle="tooltip" class="btn btn-primary"><?php echo KaGlobal::t('Next'); ?></button>
				</div>
				<h1><i class="fa fa-pencil"></i> <?php echo $heading_title; ?>: STEP 1 of 3</h1>
				<?php echo $ka_breadcrumbs; ?>
			</div>
		</div>

		<div class="container-fluid">
			<?php echo $ka_top; ?>

			<form action="<?php echo $action; ?>" method="post" enctype="multipart/form-data" id="form-input">
				<input type="hidden" name="mode" value="" />
				<table class="table table-condensed table-striped table-hover">
					<tr>
						<td colspan="3">
						This page allows you to import product data from a file in <a href="http://en.wikipedia.org/wiki/Comma-separated_values" target="_blank">CSV</a> format. <br /><br />
						</td>
					</tr>

					<tr>
						<td width="25%" style="padding-top: 30px"><label class="control-label"><span data-toggle="popover" data-content="Profiles can store import parameters to simlify management of different import configurations. You can save import parameters to a profile on the next step">Profile</span></label></td>
						<td style="padding-top: 30px">
							<?php if (!empty($profiles)) { ?>
								<?php echo KaElements::showSelector("profile_id", $profiles, $params['profile_id']); ?>

								<input type="button" value="Load" onclick="javascript: loadProfile();" />
								<input type="button" value="Delete" onclick="javascript: deleteProfile();" />
							 <?php } else { ?>
								no profiles present
							 <?php } ?>
						</td>
						<td width="50%" style="padding-top: 30px">&nbsp;</td>
					</tr>
				</table>

				<ul class="nav nav-tabs">
					<li class="active"><a href="#tab-general" data-toggle="tab"><?php echo KaGlobal::t('General'); ?></a></li>
					<li><a href="#tab-advanced" data-toggle="tab"><?php echo KaGlobal::t('Advanced'); ?></a></li>
					<li><a href="#tab-downloads" data-toggle="tab"><?php echo KaGlobal::t('Downloads'); ?></a></li>
					<li><a href="#tab-extra" data-toggle="tab"><?php echo KaGlobal::t('Extra'); ?></a></li>
				</ul>

				<div class="tab-content">
					<div class="tab-pane active" id="tab-general">
						<table class="table table-condensed table-striped table-hover">
							<tr>
								<td width="25%"><label class="control-label"><span data-toggle="popover" data-content="<b>'Local computer'</b> - you upload a file from your computer.<br /><br /><b>'Server'</b> - file location is on the server where the site is installed. The file on the server should be resided within the store directory.">File Location</span></label></td>
								<td>
										<input type="radio" name="location" value="local" onclick="javascript: activateLocation('local');" <?php if ($params['location'] == 'local') { ?> checked="checked" <?php } ?> /> Local computer
										&nbsp;&nbsp;&nbsp;&nbsp;
										<input type="radio" name="location" value="server" onclick="javascript: activateLocation('server');" <?php if ($params['location'] == 'server') { ?> checked="checked" <?php } ?> /> Server
								</td>
								<td width="50%">&nbsp;</td>
							</tr>

							<tr id="local_location" <?php if ($params['location'] != 'local') { ?>style="height: 90px; display:none" <?php } ?>>
								<td width="25%"><label class="control-label"><span data-toggle="popover" data-content="A csv file is widely used data format.<br/><br/>For opencart stores we recommend CSV files generated by '<a href=&quot;http://www.opencart.com/index.php?route=extension/extension/info&amp;extension_id=20085&quot; target=&quot;_blank&quot;>CSV Product Export</a>' extension because their structure and columns are fully supported.">File</span></label></td>
								<td>
									<?php if (!empty($params['file_name'])) { ?>
										<div id="file_uploaded">
											<input type="hidden" name="is_file_uploaded" value="Y" />										
											<?php echo $params['file_name']; ?>
											<button type="button" onclick="javascript: resetFile();">Clear</button>
										</div>
									<?php } ?>
									<div id="file_upload" <?php if (!empty($params['file_name'])) { ?> style="display:none" <?php } ?>>
										<input id="input_file" type="file" name="file" /> <br />
										<span class="help-block">Max. file size (server limit): <?php echo $max_file_size; ?></span>
									</div>
								</td>
								<td width="50%">&nbsp;</td>
							</tr>

							<tr id="server_location" <?php if ($params['location'] != 'server') { ?>style="height: 90px; display:none" <?php } ?>>
								<td width="25%"><label class="control-label">File path</label></td>
								<td nowrap="nowrap" colspan="2"><?php echo $store_root_dir . DIRECTORY_SEPARATOR; ?><input type="text" name="file_path" size="50" value="<?php echo $params['file_path']; ?>" />
								<br />
								<input type="checkbox" name="rename_file" value="Y" <?php if (!empty($params['rename_file'])) { ?> checked="checked" <?php } ?> />
								Rename the file after successful import
								</td>
							</tr>
							
							<tr>
								<td width="25%"><label class="control-label">Field Delimiter</label></td>
								<td colspan="2">
									<input type="hidden" id="delimiter_option" name="delimiter_option" value="<?php echo $params['delimiter_option']; ?>" />
									<table width="600px">
									
										<tr id="predefined_delimiter_row" <?php if ($params['delimiter_option'] != 'predefined') { ?> style="display:none" <?php } ?>>
											<td width="280px">
												<?php echo KaElements::showSelector("delimiter", $delimiters, $params['delimiter'], 'onchange="javascript: resetMark(\'delimiter\');" style="width:300px;"'); ?>
												<br /><a href="javascript: void(0);" onclick="javascript: activateDelimiter('custom');">define manually</a>
											</td>
											<td><i <?php if (!empty($delimiter_is_ok)) { ?> style="display: inline" <?php } ?>class="fa fa-check mark_valid"></i></td>
										</tr>

										<tr id="custom_delimiter_row" <?php if ($params['delimiter_option'] == 'predefined') { ?> style="display:none" <?php } ?>>
											<td width="250px">
												<input type="text" style="width: 290px" id="custom_delimiter" name="custom_delimiter" value="<?php echo $params['delimiter']; ?>" />
												<br /><a href="javascript: void(0);" onclick="javascript: activateDelimiter('predefined');">select from predefined values</a>
											</td>
											<td>&nbsp;</td>
										</tr>
									</table>
									<span class="help-block"></span>
								</td>
							</tr>

							<tr>
								<td width="25%"><label class="control-label"><span data-toggle="popover" data-content="You have to be aware of the import file charset. Use ISO-8859-1 if your data consists of Latin characters only.">File Charset</span></label></td>
								<td colspan="2">
									<input type="hidden" id="charset_option" name="charset_option" value="<?php echo $params['charset_option']; ?>" />
									<table width="600px">

										<tr id="predefined_charset_row" <?php if ($params['charset_option'] != 'predefined') { ?> style="display:none" <?php } ?>>
											<td width="280px">
												<?php echo KaElements::showSelector("charset", $charsets, $params['charset'], 'onchange="javascript: resetMark(\'charset\');" style="width:300px;"'); ?>
												<br /><a href="javascript: void(0);" onclick="javascript: activateCharset('custom');">define manually</a>
											</td>
											<td><i <?php if (!empty($charset_is_ok)) { ?> style="display: inline" <?php } ?>class="fa fa-check mark_valid"></i></td>
										</tr>

										<tr id="custom_charset_row" <?php if ($params['charset_option'] == 'predefined') { ?> style="display:none" <?php } ?>>
											<td width="250px">
												<input type="text" style="width: 290px" id="custom_charset" name="custom_charset" value="<?php echo $params['charset']; ?>" />
												<br /><a href="javascript: void(0);" onclick="javascript: activateCharset('predefined');">select from predefined values</a>
											</td>
											<td>&nbsp;</td>
										</tr>
									</table>
								</td>
							</tr>
							<tr>
								<td width="25%"><label class="control-label"><span data-toggle="popover" data-content="The mode affects only data with multiple records (categories, specials, discounts, etc.).<br/><br/> In the <b>'Add'</b> mode all related information is added to the product.<br /><br />In the <b>'Replace'</b> mode old records related to the product are deleted first. It might be useful for updating special prices, discounts.">Import Mode</span></label></td>
								<td>
									<select name="update_mode" style="width: 300px">
										<option <?php if ($params['update_mode'] == 'add') { ?>selected="selected" <?php } ?>value="add">Add new records (safe) </option>
										<option <?php if ($params['update_mode'] == 'replace') { ?>selected="selected" <?php } ?>value="replace">Replace old records </option>
									</select>
								</td>
								<td width="50%">&nbsp;</td>
							</tr>
							<tr>
								<td width="25%"><label class="control-label">Language</label></td>
								<td>
									<?php if (count($languages) > 1) { ?>
										<select name="language_id" style="width: 300px">
											<?php foreach ($languages as $language) { ?>
												<option value="<?php echo $language['language_id']; ?>" <?php if ($language['language_id'] == $params['language_id']) { ?>selected="selected"<?php } ?>><?php echo $language['name']; ?></option>
											<?php } ?>
										</select>
									<?php } else { ?>
										<?php $language = reset($languages); echo $language['name']; ?>
										<input type="hidden" name="language_id" value="<?php echo $language['language_id']; ?>" />
									<?php } ?>
								</td>
								<td width="50%">&nbsp;</td>
							</tr>
							<tr>
								<td width="25%"><label class="control-label">Store</label></td>
								<td>
									<?php if (count($stores) > 1) { ?>
										<select name="store_ids[]" multiple="multiple" size="5" style="width: 300px">
											<?php foreach($stores as $store) { ?>
												<option <?php if (in_array($store['store_id'], $params['store_ids'])) { ?>selected="selected" <?php } ?>value="<?php echo $store['store_id']; ?>"><?php echo $store['name']; ?></option>
											<?php } ?>
										</select>
									<?php } else { ?>
										<?php $store = reset($stores); echo $store['name']; ?>
										<input type="hidden" name="store_id" value="<?php echo $store['store_id']; ?>" />
									<?php } ?>
									<div class="arrow bottom"></div>
								</td>
								<td width="50%">&nbsp;</td>
							</tr>
						</table>
					</div>

					<div class="tab-pane" id="tab-advanced">
						<table class="table table-condensed table-striped table-hover">
							<tr>
								<td width="25%"><label class="control-label"><span data-toggle="popover" data-content="It is a sub-category separator. A separator of multiple product categories can be defined on the &quot;&lt;a href=&quot;<?php echo $settings_page;?>&quot; target=&quot;settings_page&quot;&gt;extension settings&lt;/a&gt;&quot; page.
								<br/><br/>Example: <p style=&quot;display:block;&quot;><?php echo "category" . $params['cat_separator'] . "subcategory1" . $params['cat_separator'] . "subcategory2"; ?></p>">Sub-Category Separator</span></label></td>
								<td>
									<input type="text" name="cat_separator" maxlength="8" size="8" value="<?php echo $params['cat_separator']; ?>" />
								</td>
								<td width="50%">&nbsp;</td>
							</tr>

							<tr>
								<td width="25%"><label class="control-label"><span data-toggle="popover" data-content="IMPORTANT: File names must consist of Latin characters only. Files with national characters in names will not be imported.">Path to Images Directory</span></label></td>
								<td colspan="2"><?php echo $store_images_dir . DIRECTORY_SEPARATOR; ?>
									<input type="text" name="images_dir" value="<?php echo $params['images_dir']?>" />
								</td>
							</tr>
							
							<tr>
								<td width="25%"><label class="control-label"><span data-toggle="popover" data-content="IMPORTANT: Images provided as URLs will be downloaded to your server and it may dramatically decrease speed of the import. Avoid using URLs in the import as long as you can.">Incoming Images Directory</span></label></td>
								<td colspan="2">
									<?php if ($params['image_urls_allowed']) { ?>
										<?php echo $store_images_dir . DIRECTORY_SEPARATOR; ?>
										<input type="text" name="incoming_images_dir" value="<?php echo $params['incoming_images_dir']?>" />
									<?php } else { ?>
										URLs are not allowed due to server configuration settings (curl library not found and allow_url_fopen=false).
									<?php } ?>
								</td>
							</tr>
							
							<?php if (!empty($categories)) { ?>
							<tr>
								<td width="25%"><label class="control-label"><span data-toggle="popover" data-content="New products will be placed into this category if another one is not specified in the file.">Default Category</span></label></td>
								<td colspan="2">
									<select name="default_category_id" style="width: 300px">
										<?php foreach($categories as $category) { ?>
											<option <?php if ($category['category_id'] == $params['default_category_id']) { ?>selected="selected" <?php } ?>value="<?php echo $category['category_id']; ?>"><?php echo $category['name']; ?></option>
										<?php } ?>
									</select>
								</td>
							</tr>
							<?php } ?>
						</table>						
					</div>
					
					<div class="tab-pane" id="tab-downloads">
						<table class="table table-condensed table-striped table-hover">
							<tr>
								<td width="25%"><label class="control-label"><span data-toggle="popover" data-content="IMPORTANT: File names must consist of Latin characters only. Files with national characters in names will not be imported.">Path to Source Directory</span></label></td>
								<td colspan="2"><?php echo $store_root_dir . DIRECTORY_SEPARATOR; ?>
									<input type="text" name="download_source_dir" value="<?php echo $params['download_source_dir']?>" />
								</td>
							</tr>
							<tr>
								<td width="25%"><label class="control-label"><span data-toggle="popover" data-content="">Where to Get File Postfix</span></label></td>
								<td>
									<select name="file_name_postfix" style="width: 300px">
										<option <?php if ($params['file_name_postfix'] == 'generate') { ?>selected="selected" <?php } ?>value="generate">Generate Random Postfixes</option>
										<option <?php if ($params['file_name_postfix'] == 'detect') { ?>selected="selected" <?php } ?>value="detect">Detect Postfixes in File Names</option>
										<option <?php if ($params['file_name_postfix'] == 'skip') { ?>selected="selected" <?php } ?>value="skip">Do Not Use Postfixes</option>
									</select>
								</td>
								<td width="50%">&nbsp;</td>
							</tr>
						</table>
					</div>
					
					<div class="tab-pane" id="tab-extra">
						<table class="table table-condensed table-striped table-hover">
							<tr>
								<td width="25%"><label class="control-label"><span data-toggle="popover" data-content="Regular product price multiplier (leave empty or set to 1 if the price should not be updated)">Price Multiplier</span></label></td>
								<td>
									<input type="text" name="price_multiplier" maxlength="8" size="8" value="<?php echo $params['price_multiplier']; ?>" />
								</td>
								<td width="50%">&nbsp;</td>
							</tr>
							<tr>
								<td width="25%"><label class="control-label">Disable Store Products not Presented in File</label></td>
								<td>
									<input type="checkbox" name="disable_not_imported_products" value="Y" <?php if (!empty($params['disable_not_imported_products'])) { ?> checked="checked" <?php } ?> />
								</td>
								<td width="50%">&nbsp;</td>
							</tr>
							<tr>
								<td width="25%"><label class="control-label">Do not Create New Products</label></td>
								<td>
									<input type="checkbox" name="skip_new_products" value="N" <?php if (!empty($params['skip_new_products'])) { ?> checked="checked" <?php } ?> />
								</td>
								<td width="50%">&nbsp;</td>
							</tr>

							<?php if ($enable_tpl_product) { ?>
								<tr>
									<td width="25%"><label class="control-label"><span data-toggle="popover" data-content="if template product is specified then new products are created as a clone of the template product and updated with data from the file">Template Product</span></label></td>
									<td>
										<input type="text" name="tpl_product" value="<?php if (!empty($tpl_product)) { echo $tpl_product['name']; } ?>" <?php if (!empty($tpl_product)) { ?> disabled="disabled" <?php } ?> />
										<div id="tpl_product_actions" <?php if (empty($tpl_product)) { ?> style="display: none" <?php } else { ?> style="display: inline" <?php } ?>>
											&nbsp;<a id="view_tpl_product" target="_blank" <?php if (!empty($tpl_product)) { echo 'href="'. $product_url . '&product_id=' . $tpl_product['product_id'] . '"'; } ?>>view</a>
											&nbsp;<a id="clear_tpl_product" onclick="javascript: clearTplProduct();" href="javascript: void(0);">clear</a>
										</div>
										<span class="help-block">(Autocomplete)</span>
										<input type="hidden" name="tpl_product_id" value="<?php if (!empty($tpl_product['product_id'])) { echo $tpl_product['product_id']; } ?>" />
									</td>
									<td width="50%">&nbsp;</td>
								</tr>
							<?php } ?>
						</table>
					</div>

				</div>
			</form>
		</div>

		
<script type="text/javascript"><!--

function activateLocation(id) {
  if (id == 'server') {
    $('#local_location').hide();
    $('#server_location').fadeIn(500);
  } else if (id == 'local') {
    $('#server_location').hide();
    $('#local_location').fadeIn(500);
  }
}


function activateCharset(id) {
  if (id == 'predefined') {
    $('#custom_charset_row').hide();
    $('#predefined_charset_row').show();
    $('#charset_option').val('predefined');

  } else if (id == 'custom') {
    $('#predefined_charset_row').hide();
    $('#custom_charset_row').show();
    $('#charset_option').val('custom');
  }
}

function activateDelimiter(id) {
  if (id == 'predefined') {
    $('#custom_delimiter_row').hide();
    $('#predefined_delimiter_row').show();
    $('#delimiter_option').val('predefined');

  } else if (id == 'custom') {
    $('#predefined_delimiter_row').hide();
    $('#custom_delimiter_row').show();
    $('#delimiter_option').val('custom');
  }
}


function loadProfile() {

  $("#form-input input[name='mode']").prop('value', 'load_profile');
  $("#form-input").submit();
}


function deleteProfile() {

  $("#form-input input[name='mode']").prop('value', 'delete_profile');
  $("#form-input").submit();
}

$('input[name=\'tpl_product\']').autocomplete({
  delay: 0,
  source: function(request, response) {
    $.ajax({
      url: 'index.php?route=tool/ka_product_import/completeTpl&token=<?php echo $token; ?>',
      type: 'POST',
      dataType: 'json',
      data: 'filter_name=' + encodeURIComponent(request),
      success: function(data) {
        response($.map(data, function(item) {
          return {
            label: item.name,
            value: item.product_id
          }
        }));
      }
    });

  },
  select: function(item) {

    $("input[name='tpl_product']").prop('value', item.label).prop('disabled', 'disabled');
    $("input[name='tpl_product_id']").prop('value', item.value);
    $("#view_tpl_product").prop('href', '<?php echo $product_url; ?>' + '&product_id=' + item.value);
    $("#tpl_product_actions").css('display', 'inline');

    return false;
  }
});


function clearTplProduct() {

    $("input[name='tpl_product']").prop('value', '').removeAttr('disabled');
    $("input[name='tpl_product_id']").prop('value', '');
    $("#view_tpl_product").removeProp('href');
    $("#tpl_product_actions").hide();
}

function resetFile() {

	$('#file_uploaded').hide();
	$('#file_uploaded > input').prop('disabled', true);
	
	$('#file_upload').show();
}

function resetMark(param) {

	if (param == 'delimiter') {
		$('#predefined_delimiter_row > td > .mark_valid').hide();
	} else {
		$('#predefined_charset_row > td > .mark_valid').hide();
	}
}

function ka_OnBlobLoadEnd(evt) {

	if (evt.target.readyState != FileReader.DONE) {
		return;
	}
	
	var file_data = evt.target.result;
	
  $.ajax({
    url: 'index.php?route=tool/ka_product_import/examineFileData&token=<?php echo $token; ?>',
    type: 'POST',
    dataType: 'json',
    data: 'file_data=' + encodeURIComponent(file_data.match(/,(.*)$/)[1]),
		beforeSend: function() {
		},
		complete: function() {
		},
    success: function(data) {
    
    	if (data.error) {
    		$.ka.alert(data.error, 'E');
    		return;
    	}
    	
    	if (data.delimiter) {
    		$('select[name="delimiter"] option[value="' + data['delimiter'] + '"]').prop('selected', true);
    		
    		if ($('#delimiter_option').val() == 'predefined') {
					$('#predefined_delimiter_row > td > .mark_valid').fadeIn(750);
				}
    	}
    	
    	if (data.charset) {
	    	$('select[name="charset"] option[value="' + data['charset'] + '"]').prop('selected', true);
	    	
	    	if ($('#charset_option').val() == 'predefined') {
					$('#predefined_charset_row > td > .mark_valid').fadeIn(750);
				}
    	}
    }
        
  });
}

var max_server_file_size = <?php echo $max_server_file_size; ?>;

function ka_InputFileHandler(evt) {

  var files = evt.target.files;
	if (!files.length) {
		return;
	}

	resetMark('delimiter');
	resetMark('charset');
	
	if (files[0].size > max_server_file_size) {
		$.ka.alert('The file size exceeds limits defined by the server. File content might be truncated. You should upload the file to the server manually through ftp/scp protocol and specify <b>"File Location"</b> as <b>"Server"</b>', 
			'E'
		);
	}

	var xls_pattern = new RegExp("\.[xml]$", "i");
	if (xls_pattern.test(files[0].name)) {
		$.ka.alert('Be careful. The file has xml extension. The import works with CSV files only.', 'E');
	}
		
	var xls_pattern = new RegExp("\.[xls|xlsx]$", "i");
	if (xls_pattern.test(files[0].name)) {
		$.ka.alert('Be careful. The file has MS Excel file extension. The import works with CSV files only. You can save the XLS file as a CSV file in MS Excel.', 'E');
	}

	var xls_pattern = new RegExp("\.[zip|arj|rar]$", "i");
	if (xls_pattern.test(files[0].name)) {
		$.ka.alert('Be careful. The file has an archive extension. The import works with CSV files only.', 'E');
	}
	
	var blob = files[0].slice(0, 1024 * 4);
	var reader = new FileReader();
	reader.onloadend  = ka_OnBlobLoadEnd;
	reader.readAsDataURL(blob);
	
}

$(document).ready(function() {

	if (window.File && window.FileReader && window.FileList && window.Blob) {
		$('#input_file').on('change', ka_InputFileHandler);
	}

	$('[data-toggle=\'popover\']').popover({
			html: true,
			trigger:'click hover focus',
			delay: {show:"300", "hide": 1500}
	});

	$().alert();
	
	$('#backup_warning').on('closed.bs.alert', function () {

		$.ajax({
			url: 'index.php?route=tool/ka_product_import/saveWarning&token=<?php echo $token; ?>',
			type: 'POST',
			data: 'warning_closed=' + encodeURIComponent('1'),
			dataType: 'json'
		});

	})

			
});

//--></script>

  <?php } elseif ($params['step'] == 2) { ?>

		<div class="page-header">
			<div class="container-fluid">
				<div class="pull-right">
						<button type="submit" form="form-input" data-toggle="tooltip" data-content="<?php echo KaGlobal::t('Next'); ?>" class="btn btn-primary"><?php echo KaGlobal::t('Next'); ?></button>
				</div>
				<h1><i class="fa fa-pencil"></i> <?php echo $heading_title; ?>: STEP 2 of 3</h1>
				<?php echo $ka_breadcrumbs; ?>
			</div>
		</div>

	  <div class="container-fluid">
			<?php echo $ka_top; ?>

			<?php if (empty($hide_backup_warning)) { ?>
				<div id="backup_warning" class="alert alert-warning alert-dismissible" role="alert">
					<button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
					<strong>Caution!</strong> It is recommended to create <a href="<?php echo $backup_link; ?>" target="_blank">a database backup</a> before starting the import procedure
					because these chagnes are irreversible.
				</div>
			<?php } ?>					
			
			<form action="<?php echo $action; ?>" method="post" enctype="multipart/form-data" id="form-input">
				<input type="hidden" name="mode" value="" />
				<table class="table table-condensed table-striped table-hover">
          <tr>
            <td width="100px"><label class="control-label">Profile</label></td>
            <td width="150px">
              <input type="hidden" name="profile_id" value="<?php echo $params['profile_id']; ?>" />
              <input type="text" name="profile_name" value="<?php echo $params['profile_name']; ?>" style="width: 90%" />
            </td>
            <td width="50px">
              <input type="button" value="Save" onclick="javascript: saveProfile();" />
            </td>
            <td width="100px">
            </td>
            <td width="200px">
              File size: <?php echo $filesize; ?>
            </td>
          </tr>
        </table>

				<ul class="nav nav-tabs">
					<li class="active"><a href="#tab-general" data-toggle="tab"><?php echo KaGlobal::t('General'); ?></a></li>
					<li><a href="#tab-attributes" data-toggle="tab"><?php echo KaGlobal::t('Attributes'); ?></a></li>
					<li><a href="#tab-filters" data-toggle="tab"><?php echo KaGlobal::t('Filters'); ?></a></li>
					<li><a href="#tab-options" data-toggle="tab"><?php echo KaGlobal::t('Options'); ?></a></li>
					<li><a href="#tab-discounts" data-toggle="tab"><?php echo KaGlobal::t('Discounts'); ?></a></li>
					<li><a href="#tab-specials" data-toggle="tab"><?php echo KaGlobal::t('Specials'); ?></a></li>
					<li><a href="#tab-reward_points" data-toggle="tab"><?php echo KaGlobal::t('Reward Points'); ?></a></li>
					<li><a href="#tab-product_profiles" data-toggle="tab"><?php echo KaGlobal::t('Product Profiles'); ?></a></li>
					<li><a href="#tab-reviews" data-toggle="tab"><?php echo KaGlobal::t('Reviews'); ?></a></li>
				</ul>
				
				<div class="tab-content">
					<div class="tab-pane active" id="tab-general">
					
						Select corresponding columns for product fields on all tabs. It is OK to skip fields or columns.
						<br /><br />
						
						<table class="table table-condensed table-condensed table-striped table-hover">
							<thead>
								<tr>
									<td class="left" width="25%">Product Field</td>
									<td>Column in File</td>
									<td width="50%">Notes</td>
								</tr>
							</thead>
							<tbody>
							<?php foreach($matches['fields'] as $fk => $fv) { ?>
								<tr>
									<td width="25%" <?php if (!empty($fv['required'])) { ?>class="required" <?php } ?>>
										<label class="control-label">
										<?php 
											if (!empty($fv['tip'])) { 
												echo '<span data-toggle="popover" data-content="' . htmlspecialchars($fv['tip']) . '">';
											}
										?>
										<?php echo $fv['name'] ?>
										<?php if (!empty($fv['tip'])) { echo '</span>'; } ?>
										</label>
									</td>
									<td>
										<?php 
											$val = (isset($fv['column'])) ? $fv['column']:0;
											echo KaElements::showSelector("fields[$fv[field]]", $columns, $val);
										?>
									</td>
									<td width="50%"><span class="help"><?php echo $fv['descr']; ?></span></td>
								</tr>
							<?php } ?>
							</tbody>
						</table>
					</div>
				
					<div class="tab-pane" id="tab-attributes">

						Only attributes declared in the store will be imported. Create new attributes <a href="<?php echo $attribute_page_url; ?>">here</a><br /><br />
									
						<table class="table table-condensed table-striped table-hover">
							<thead>
								<tr>
									<td class="left" width="25%">Attribute Name</td>
									<td>Column in File</td>
									<td width="50%">Attribute Group</td>
								</tr>
							</thead>
							<tbody>
							<?php foreach($matches['attributes'] as $ak => $av) { ?>
								<tr>
									<td width="25%"><label class="control-label"><?php echo $av['name'] ?></label></td>
									<td>
										<?php echo KaElements::showSelector("attributes[$av[attribute_id]]", $columns, $av['column']); ?>
									</td>
									<td width="50%"><?php echo $av['attribute_group']; ?></td>
								</tr>
							<?php } ?>
							</tbody>
						</table>
					</div>
					
					<div class="tab-pane" id="tab-filters">
						Available filter groups are listed below. You can create new filter groups <a href="<?php echo $filter_page_url; ?>">here</a><br /><br />
						<table class="table table-condensed table-striped table-hover">
							<thead>
								<tr>
									<td class="left" width="25%">Filter Group</td>
									<td>Column in File</td>
									<td width="50%">Notes</td>
								</tr>
							</thead>

							<tbody>
							<?php foreach($matches['filter_groups'] as $fk => $fv) { ?>
								<tr>
									<td width="25%"><label class="control-label"><?php echo $fv['name'] ?></label></td>
									<td>
										<?php echo KaElements::showSelector("filter_groups[$fv[filter_group_id]]", $columns, $fv['column']); ?>
									</td>
									<td width="50%">&nbsp;</td>
								</tr>
							<?php } ?>
							</tbody>
						</table>
					</div>

					<div class="tab-pane" id="tab-options">
						There are two option formats available for importing the options. The <b>simple format</b> is used when your options
						have option values only without any extended data like quantity, price, weight, etc. Both formats can be combined in single import.
						
						<br /><br />
						
						<ul class="nav nav-tabs">
							<li class="active"><a href="#otab-simple_format" data-toggle="tab"><?php echo KaGlobal::t('Simple Format'); ?></a></li>
							<li><a href="#otab-extended_format" data-toggle="tab"><?php echo KaGlobal::t('Extended Format'); ?></a></li>
						</ul>

						<div class="tab-content">
							<div class="tab-pane active" id="otab-simple_format">
								Select the columns containg simple option values (without weight, price, etc.). New options should be created beforehand at <a href="<?php echo $option_page_url; ?>">the options page</a>.
								You can import multiple values from one cell if you define the 'options separataor' on the extension settings page. <a href="javascript: void(0)" onclick="javascript: $('#simple_options_example').show()">See example</a>
								<div id="simple_options_example" style="display:none; color: green">
									<br />If you define the '|' character as a separator then you can define option values like shown below:<br />
									<br />Header line :...,Size,...
									<br />Product line:...,"S|M|L|XL",...
									<br /><br />
									The cell will add 4 option values to the product.						
								</div>
								<br /><br />
								<table class="table table-condensed table-striped table-hover">
									<thead>
										<tr>
											<td class="left" width="25%">Option Name</td>
											<td>Column in File</td>
											<td width="5%">Required</td>
											<td width="5%">Type</td>
										</tr>
									</thead>
									<tbody>
									<?php foreach($matches['options'] as $ok => $ov) { ?>
										<tr>
											<td width="25%"><label class="control-label"><?php echo $ov['name'] ?></label></td>
											<td>
												<?php echo KaElements::showSelector("options[$ov[option_id]]", $columns, $ov['column']); ?>
											</td>
											<td width="5%"><input type="checkbox" name="required_options[<?php echo $ov['option_id'];?>]" value="Y" <?php if (!empty($params['matches']['required_options'][$ov['option_id']])) { ?> checked="checked" <?php } ?> /></td>
											<td width="45%"><?php echo $ov['type']; ?></td>
										</tr>
									<?php } ?>
								</table>
							</div>
							
							<div class="tab-pane" id="otab-extended_format">

								If you need to import extra option properties like weight, price, quantity please use <a href="javascript: void(0)" onclick="javascript: $('#option_format').show()">reserved columns</a>. Options from <b>the resered columns</b> are pre-selected automatically.<br />

								<div id="option_format" style="display:none">
	<pre>
	COLUMN           | DESCRIPTION
	-----------------------------------------------------------------------------
	option:name      | option name (required)
	option:type      | option type (required)
	option:value     | option value (required)
	option:required  | option is required or not (Y/1 - yes, N/0 - no) (optional)
	option:image     | file path or URL (optional)
	option:sort_order| sort order of option value (optional)

	The following fields define options with extra attributes.

	option:quantity  | quantity (optional)
	option:subtract  | subtract flag (optional)
	option:price     | price (the value can be negative)
	option:points    | points (the value can be negative)
	option:weight    | weight (the value can be negative)
	</pre>
								</div>

								<br />

								<table class="table table-condensed table-striped table-hover">
									<thead>
										<tr>
											<td class="left" width="25%">Field</td>
											<td>Column in File</td>
											<td width="50%">Notes</td>
										</tr>
									</thead>

									<tbody>

									<?php foreach($matches['ext_options'] as $dk => $dv) { ?>
										<tr>
											<td width="25%"><label class="control-label"><?php echo $dv['name'] ?></label></td>
											<td>
												<?php echo KaElements::showSelector("ext_options[$dv[field]]", $columns, $dv['column']); ?>
											</td>
											<td width="50%"><span class="help"><?php echo $dv['descr']; ?></span></td>
										</tr>
									<?php } ?>

								</table>
							</div>        
						</div>
					</div>
					
					<div class="tab-pane" id="tab-discounts">
					
						Product Discounts. You should specify at least 'quantity' and 'price' values to add new discount records.<br /><br />

						<table class="table table-condensed table-striped table-hover">
							<thead>
								<tr>
									<td class="left" width="25%">Field</td>
									<td>Column in File</td>
									<td width="50%">Notes</td>
								</tr>
							</thead>
							<tbody>
							<?php foreach($matches['discounts'] as $dk => $dv) { ?>
								<tr>
									<td width="25%"><label class="control-label"><?php echo $dv['name'] ?></label></td>
									<td>
										<?php echo KaElements::showSelector("discounts[$dv[field]]", $columns, $dv['column']); ?>
									</td>
									<td width="50%"><span class="help"><?php echo $dv['descr']; ?></span></td>
								</tr>
							<?php } ?>
						</table>
					</div>
							
					<div class="tab-pane" id="tab-specials">

						Product Special Prices. You should specify at least 'price' value to add new special price records.<br /><br />

						<table class="table table-condensed table-striped table-hover">
							<thead>
								<tr>
									<td class="left" width="25%">Field</td>
									<td>Column in File</td>
									<td width="50%">Notes</td>
								</tr>
							</thead>
							<tbody>
							<?php foreach($matches['specials'] as $dk => $dv) { ?>
								<tr>
									<td width="25%"><label class="control-label"><?php echo $dv['name'] ?></label></td>
									<td>
										<?php echo KaElements::showSelector("specials[$dv[field]]", $columns, $dv['column']); ?>
									</td>
									<td width="50%"><span class="help"><?php echo $dv['descr']; ?></span></td>
								</tr>
							<?php } ?>
						</table>
					</div>
							
					<div class="tab-pane" id="tab-reward_points">

						Product Reward Points.<br /><br />

						<table class="table table-condensed table-striped table-hover">
							<thead>
								<tr>
									<td class="left" width="25%">Field</td>
									<td>Column in File</td>
									<td width="50%">Notes</td>
								</tr>
							</thead>

							<tbody>

							<?php foreach($matches['reward_points'] as $dk => $dv) { ?>            
								<tr>
									<td width="25%"><label class="control-label"><?php echo $dv['name'] ?></label></td>
									<td>
										<?php echo KaElements::showSelector("reward_points[$dv[field]]", $columns, $dv['column']); ?>
									</td>
									<td width="50%"><span class="help"><?php echo $dv['descr']; ?></span></td>
								</tr>
							<?php } ?>

						</table>
					</div>
						
					<div class="tab-pane" id="tab-product_profiles">

						Product Profiles (for recurring billing).<br /><br />

						<table class="table table-condensed table-striped table-hover">
							<thead>
								<tr>
									<td class="left" width="25%">Field</td>
									<td>Column in File</td>
									<td width="50%">Notes</td>
								</tr>
							</thead>
							<tbody>
							<?php foreach($matches['product_profiles'] as $dk => $dv) { ?>            
								<tr>
									<td width="25%"><label class="control-label"><?php echo $dv['name'] ?></label></td>
									<td>
										<?php echo KaElements::showSelector("product_profiles[$dv[field]]", $columns, $dv['column']); ?>
									</td>
									<td width="50%"><span class="help"><?php echo $dv['descr']; ?></span></td>
								</tr>
							<?php } ?>
						</table>
					</div>

					<div class="tab-pane" id="tab-reviews">

						Customer reviews.<br /><br />

						<table class="table table-condensed table-striped table-hover">
							<thead>
								<tr>
									<td class="left" width="25%">Field</td>
									<td>Column in File</td>
									<td width="50%">Notes</td>
								</tr>
							</thead>
							<tbody>
							<?php foreach($matches['reviews'] as $dk => $dv) { ?>            
								<tr>
									<td width="25%"><label class="control-label"><?php echo $dv['name'] ?></label></td>
									<td>
										<?php echo KaElements::showSelector("reviews[$dv[field]]", $columns, $dv['column']); ?>
									</td>
									<td width="50%"><span class="help"><?php echo $dv['descr']; ?></span></td>
								</tr>
							<?php } ?>
						</table>
					</div>
										
				</div>
			</form>
		</div>      

<script type="text/javascript"><!--

function saveProfile() {

  $("#form-input input[name='mode']").prop('value', 'save_profile');
  $("#form-input").submit();
}

$(document).ready(function() {

	$('[data-toggle=\'popover\']').popover({
			html: true,
			trigger:'click hover focus',
			delay: {show:"300", "hide": 1500}
	});
});

//--></script>

    <?php } elseif ($params['step'] == 3) { ?>

			<div class="page-header">
				<div class="container-fluid">
					<div class="pull-right" id="buttons_in_progress">
							<button onclick="javascript: ka_stop_import();" data-toggle="tooltip" data-content="<?php echo KaGlobal::t('Stop'); ?>" class="btn btn-primary"><i class="fa fa-stop"></i> <?php echo KaGlobal::t('Stop'); ?></button>
					</div>
			
					<div class="pull-right" id="buttons_stopped" style="display: none">
							<button onclick="javascript: ka_continue_import();" data-toggle="tooltip" data-content="<?php echo KaGlobal::t('Continue'); ?>" class="btn btn-primary"><i class="fa fa-play"></i> <?php echo KaGlobal::t('Continue'); ?></button>
					</div>

					<div class="pull-right" id="buttons_completed" style="display: none">
							<button onclick="location='<?php echo $done_action; ?>'" data-toggle="tooltip" data-content="<?php echo KaGlobal::t('Done'); ?>" class="btn btn-primary"><i class="fa fa-check-circle"></i> <?php echo KaGlobal::t('Done'); ?></button>
					</div>
																			
					<h1><i class="fa fa-pencil"></i> <?php echo $heading_title; ?>: STEP 3 of 3</h1>
					<?php echo $ka_breadcrumbs; ?>
				</div>
			</div>

			<div class="container-fluid">
				<?php echo $ka_top; ?>    
				
        <h2 id="import_status">Import is in progress</h2>
				<table class="table table-striped table-hover">
          <tr>
            <td colspan="2">The import statistics updates every <? echo $update_interval; ?> seconds. Please do not close the window.</td>
          </tr>
          <tr>
            <td width="25%">Completion at</td>
            <td id="completion_at">0%</td>
          </tr>
          <tr>
            <td width="25%">Time Passed</td>
            <td id="time_passed">0</td>
          </tr>
          <tr>
            <td width="25%">Lines Processed</td>
            <td id="lines_processed">0</td>
          </tr>
          <tr>
            <td width="25%">Products Created</td>
            <td id="products_created">0</td>
          </tr>
          <tr>
            <td width="25%">Products Updated</td>
            <td id="products_updated">0</td>
          </tr>
          <tr>
            <td width="25%">Products Deleted</td>
            <td id="products_deleted">0</td>
          </tr>
          <tr>
            <td width="25%">Categories Created</td>
            <td id="categories_created">0</td>
          </tr>
          <tr>
            <td colspan="2">
              <h4>Import messages:</h4>
              <div class="scroll" id="scroll">
              </div>
              <input type="checkbox" id="autoscroll" checked="checked" /> Autoscrolling
            </td>
          </tr>
        </table>
    	</div>


<script type="text/javascript"><!--

var ka_page_url = '<?php echo $page_url; ?>';
var ka_timer    = null;

/*
  possible statuses
    not_started -
    in_progress -
    completed   -
    temp_error  -
    fatal_error -
*/
var ka_import_status = 'not_started';

/*
  possible ajax statuses:
    not_started -
    in_progress -
*/
var ka_ajax_status   = 'not_started';

function ka_update_interface(status) {
  $("#buttons_in_progress").hide();
  $("#buttons_completed").hide();
  $("#buttons_stopped").hide();

  if (status == 'fatal_error') {
    $("#import_status").html("Server Script Error. Please check the error logs");
    $("#buttons_completed").show();

  } else if (status == 'error') {
    $("#import_status").html("Fatal Import Error. Please see the import messages box");
    $("#buttons_completed").show();

  } else if (status == 'stopped') {
    $("#import_status").html("Import stopped");
    $("#buttons_stopped").show();

  } else if (status == 'completed') {
    $("#buttons_completed").show();
    $("#import_status").html("Import is complete!");
  
  } else if (status == 'in_progress') {
    $("#import_status").html('Import is in progress');
    $("#buttons_in_progress").show();
  }
}


function ka_stop_import() {
  ka_import_status = 'fatal_error';
  $("#import_status").html('Import has been stopped');
  ka_update_interface('stopped');
}


function ka_continue_import() {
  ka_import_status = 'in_progress';
  ka_update_interface('in_progress');
}


function ka_ajax_error(jqXHR, textStatus, errorThrown) {
  ka_import_status = 'temp_error';

  if ($.inArray(textStatus, ['abort', 'parseerror', 'error'])) {
    ka_import_status = 'fatal_error';

    if (jqXHR.status == '200') {
      ka_add_message("Server error (status=200). Details:" + jqXHR.responseText);
    } else {
      ka_add_message("Server error (status=" + jqXHR.status + ").");
    }
    ka_update_interface('stopped');
  } else {
    ka_add_message('Temporary connection problems.');
  }

  ka_ajax_status = 'not_started';
}


function ka_ajax_success(data, textStatus, jqXHR) {

  if (!data) {

    ka_import_status = 'fatal_error';
    ka_update_interface('fatal_error');

  } else {
    if (data['messages']) {
      for (i in data['messages']) {
        ka_add_message(data['messages'][i]);
      }
    }

    $("#completion_at").html(data['completion_at']);
    $("#lines_processed").html(data['lines_processed']);
    $("#products_created").html(data['products_created']);
    $("#products_updated").html(data['products_updated']);
    $("#products_deleted").html(data['products_deleted']);
    $("#categories_created").html(data['categories_created']);
    $("#time_passed").html(data['time_passed']);

    if (data['status'] == 'error') {
      ka_import_status = 'fatal_error';
      ka_update_interface('error');

    } else if (data['status'] == 'completed') {
      ka_import_status = 'completed';
      ka_update_interface('completed');
    }
  }

  ka_ajax_status = 'not_started';
}


function ka_add_message(msg) {
  var dt       = new Date();
  var log_time = "[" + dt.getHours() + ":" + dt.getMinutes() + ":" + dt.getSeconds() + "] ";
  $("#scroll").append(log_time + msg + "<br />");

  if ($("#autoscroll").prop("checked")) {
    $("#scroll").scrollTop(999999);
  }
}

var ka_dots     = 0;
var status_text = '';

function ka_import_loop() {

  if ($.inArray(ka_import_status, ['fatal_error', 'completed']) >= 0) {
    return;
  }

  if ($.inArray(ka_import_status, ['in_progress']) >= 0) {

    // show animation

    if (ka_dots == 0) {
      status_text = "Import is in progress";
    } else {
      status_text = status_text + '.';
    }
    if (ka_dots++ > 5)
      ka_dots = 0;
    $("#import_status").html(status_text);
  }

  if ($.inArray(ka_ajax_status, ['not_started']) >= 0) {
    ka_ajax_status = 'in_progress';
    $.ajax({
      url: ka_page_url,
      dataType: 'json',
      cache : false,
      success: ka_ajax_success,
      error: ka_ajax_error
    });
  }
}
  
$(document).ready(function() {
	
  ka_import_status = 'in_progress';
  ka_timer = setInterval('ka_import_loop()', 750);
  
});

//--></script> 
	
	<?php } ?>

	<span class="help-block text-right" style="padding-right: 40px">'CSV Product Import' extension developed by <a href="mailto:support@ka-station.com?subject=CSV Product Import">karapuz</a></span>
</div>

<?php echo $footer; ?>